Таковых прямых const' не бывает.

var существует до того - как он был обьявлен в коде.

use strict - после написаний этого кода - мы работаем в современном режиме, и некоторые неточности в скрипте уже не будут работать.

Любую информацию которую мы получаем от пользователя - всегда будет в ввиде строк. Независимо от того как мы его получили, при помощи команд или операторов.
Например: prompt, confirm, или же на самой странице элемента - всёравно будет строка.

// {
//     let result = 50;
// }

// console.log(result);  //прелесть такого подхода - пока мне не понятен но отличается такой особенностью

// {
//     var result = 50;
// }

const leftBorderWidth = 1;    //такой формат называется КемолКейс

console.log(name);
var name = "Ivan";  //Хостинг, или всплытие переменных


typeof - оператор определяющий тип даннных.

Обьект - это коллекция данных, структура в которой может содержаться разные типы данных.(Также он называется комплексным, ведь там могут храниться разные типы данных, как и массив)

++ - это унарный плюс, заметка унарным плюсом является, что он ставится перед каким-либо значением: console.log(4 + +'5');

Когда мы ставим операторы перед значением ++incr - то такая форма называется префикскной.
Когда мы ставим операторы после значения --decr - то такая форма называется посфикстной.

incr - это оператор инкремента - т.е. увеличение на единицу.
decr = это оператор дикримента - т.е. уменьшение на единицу.

`` Бэктики - т.е. косые ковычки.

! - это оператор отрицания.

% - это знак процента.

= - это знак не РАВЕНСТВА, а присваивание.
 
Также имеется два логических оператора - (&& ||) анперсанта.

&& - оператор и. (оператор И работает только тогда, когда у нас два или более подобных являются правдивыми выражениями)

|| - оператор или. (оператор ИЛИ точно также, но не обязательно чтобы два выражения являлись правдивыми)


? - это тернарный оператор. В его работе участвуют аж три аргумента. Единственный оператор на текущий момент

Есть два аргумента - это бинарный и унарный.

Бинарным аргументом называется: 4 + 4 < 2-я четвёртка

+4; - это унарный аргумент.

Конструкция switch - всегда идёт на строгое сравнение.

break - обязательная синтаксическая конструкция

switch (num) {
    case 49:
        console.log('Неверно');
        break; на этом синтаксе всё заканчивается и скрипт не идёт дальше.
}

Понимая, что, когда мы прописываем "break" после каждого "case" для того, чтобы, наш алгоритм, в случае верного условия,
 не начал, делать ненужную работу (то есть проверять неверные решения)

default - если что-то не выполнилось, то пишем эту команду.

<= - меньше или равно.

do - сделай что-то

i - это итератор.

continue - оператор континью пропускает тот шаг, который нам не нужен, но при этом не прерывает полностью цикл.


Выводит число, равное тому, сколько раз была вызвана конкретная функция count().